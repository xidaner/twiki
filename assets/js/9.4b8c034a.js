(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{805:function(s,t,a){"use strict";a.r(t);var e=a(112),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("center",[a("h1",[s._v("容器逃逸方法检测指北")])]),s._v(" "),a("hr"),s._v(" "),a("h1",{attrs:{id:"_0x00-前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0x00-前言"}},[s._v("#")]),s._v(" 0x00 前言")]),s._v(" "),a("p",[s._v("最近发现有关容器逃逸的文章大多覆盖的方法不全，而且有些缺少相应的检测方法，导致 RT 在拿到一个容器权限时，比较难以判断这个容器存在哪些逃逸方法。")]),s._v(" "),a("p",[s._v("本文尽可能覆盖全容器逃逸检测的方法，并尽可能的给出在容器内部就能检测的方法，这样 RT 在容器内运行一下命令，根据返回的结果就能判断有没有这个漏洞了。")]),s._v(" "),a("p",[s._v("针对这些检测方法，我这边也写了相应的脚本，方便在容器内部一键检测，脚本放到文章底部了。")]),s._v(" "),a("p",[s._v("对于一些无法直接在容器内部检测到的逃逸方法，这里是不列举的，如果读者知道其他逃逸漏洞的检测方法，欢迎留言或者给脚本提 PR")]),s._v(" "),a("h2",{attrs:{id:"判断是否为容器环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断是否为容器环境"}},[s._v("#")]),s._v(" 判断是否为容器环境")]),s._v(" "),a("p",[s._v("首先对于 RT 而言，需要先判断当前环境是不是容器环境，可以直接使用下面的命令去判断")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /proc/1/cgroup "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -qi "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Is Docker"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Not Docker"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如果返回 Is Docker，说明当前是 Docker 容器环境，反之亦然。")]),s._v(" "),a("h2",{attrs:{id:"容器逃逸介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器逃逸介绍"}},[s._v("#")]),s._v(" 容器逃逸介绍")]),s._v(" "),a("p",[s._v("在开始之前对于容器逃逸主要有以下三种方法：")]),s._v(" "),a("ol",[a("li",[s._v("不安全的配置")]),s._v(" "),a("li",[s._v("相关程序漏洞")]),s._v(" "),a("li",[s._v("内核漏洞")])]),s._v(" "),a("p",[s._v("这里分别列举一下每种逃逸的检测方法，这样在拿到一个容器权限的时候，本文可以起到一个手册的作用。")]),s._v(" "),a("p",[s._v("RT 可以通过本文中所提到的检测方法，判断出当前容器可能存在哪种逃逸漏洞，从而采取对应的逃逸方法。")]),s._v(" "),a("p",[a("em",[s._v("注意：")])]),s._v(" "),a("ol",[a("li",[a("em",[s._v("以下检测方法大多是基于笔者自己的经验，可能会存在误检或者漏检的情况，如果读者发现，欢迎留言或者给脚本提 Issue")])]),s._v(" "),a("li",[a("em",[s._v("由于「相关程序漏洞」这种逃逸方法需要根据目标 Docker 的版本去判断，这里暂时没想到从容器内部获取 Docker 版本的方法，因此脚本暂时还不支持这块的检测。")])])]),s._v(" "),a("h1",{attrs:{id:"_0x01-不安全的配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0x01-不安全的配置"}},[s._v("#")]),s._v(" 0x01 不安全的配置")]),s._v(" "),a("h2",{attrs:{id:"_1、特权模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、特权模式"}},[s._v("#")]),s._v(" 1、特权模式")]),s._v(" "),a("p",[s._v("执行以下命令，如果返回 Is privileged mode 则说明当前是特权模式")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /proc/self/status "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -qi "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0000003fffffffff"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Is privileged mode"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Not privileged mode"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如果返回 Not privileged mode 则说明当前不是特权模式")]),s._v(" "),a("h2",{attrs:{id:"_2、挂载-docker-socket"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、挂载-docker-socket"}},[s._v("#")]),s._v(" 2、挂载 Docker Socket")]),s._v(" "),a("p",[s._v("执行以下命令，如果返回 Docker Socket is mounted. 说明当前挂载了 Docker Socket")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" /var/run/ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -qi docker.sock "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Docker Socket is mounted."')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Docker Socket is not mounted."')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如果返回 Docker Socket is not mounted. 则说明没有挂载")]),s._v(" "),a("h2",{attrs:{id:"_3、挂载-procfs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、挂载-procfs"}},[s._v("#")]),s._v(" 3、挂载 procfs")]),s._v(" "),a("p",[s._v("执行以下命令，如果返回 Procfs is mounted. 说明当前挂载了 procfs")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" / -name core_pattern "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),s._v("/dev/null "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wc")]),s._v(" -l "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -q "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Procfs is mounted."')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Procfs is not mounted."')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如果返回 Procfs is not mounted. 则说明没有挂载")]),s._v(" "),a("h2",{attrs:{id:"_4、挂载宿主机根目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、挂载宿主机根目录"}},[s._v("#")]),s._v(" 4、挂载宿主机根目录")]),s._v(" "),a("p",[s._v("执行以下命令，如果返回 Root directory is mounted. 则说明宿主机目录被挂载")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" / -name "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("passwd")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),s._v("/dev/null "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" /etc/passwd "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wc")]),s._v(" -l "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -q "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Root directory is mounted."')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Root directory is not mounted."')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如果返回 Root directory is not mounted. 则说明没有挂载")]),s._v(" "),a("h2",{attrs:{id:"_5、docker-remote-api-未授权访问"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、docker-remote-api-未授权访问"}},[s._v("#")]),s._v(" 5、Docker remote api 未授权访问")]),s._v(" "),a("p",[s._v("执行以下命令，如果返回 Docker Remote API Is Enabled. 说明目标存在 Docker remote api 未授权访问")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("IP")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("hostname")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" -F. "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{print $1 "." $2 "." $3 ".1"}\'')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeout")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" -c "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"echo >/dev/tcp/'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$IP")]),s._v('/2375"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /dev/null "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Docker Remote API Is Enabled."')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Docker Remote API is Closed."')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如果返回 Docker Remote API is Closed. 则表示目标不存在 Docker remote api 未授权访问")]),s._v(" "),a("h1",{attrs:{id:"_0x02-内核漏洞"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0x02-内核漏洞"}},[s._v("#")]),s._v(" 0x02 内核漏洞")]),s._v(" "),a("h2",{attrs:{id:"_1、cve-2016-5195-dirtycow-逃逸"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、cve-2016-5195-dirtycow-逃逸"}},[s._v("#")]),s._v(" 1、CVE-2016-5195  DirtyCow 逃逸")]),s._v(" "),a("p",[s._v("执行 uname -r 命令，如果在 2.6.22 <= 版本 <= 4.8.3 之间说明可能存在 CVE-2016-5195 DirtyCow 漏洞。")]),s._v(" "),a("h2",{attrs:{id:"_2、cve-2020-14386"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、cve-2020-14386"}},[s._v("#")]),s._v(" 2、CVE-2020-14386")]),s._v(" "),a("p",[s._v("执行 uname -r 命令，如果在 4.6 <= 版本 < 5.9 之间说明可能存在 CVE-2020-14386 漏洞。")]),s._v(" "),a("h2",{attrs:{id:"_3、cve-2022-0847-dirtypipe-逃逸"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、cve-2022-0847-dirtypipe-逃逸"}},[s._v("#")]),s._v(" 3、CVE-2022-0847  DirtyPipe 逃逸")]),s._v(" "),a("p",[s._v("执行 uname -r 命令，如果在 5.8 <= 版本 < 5.10.102 < 版本 < 5.15.25 < 版本 < 5.16.11 之间说明可能存在 CVE-2022-0847 DirtyPipe 漏洞。")]),s._v(" "),a("h1",{attrs:{id:"_0x03-容器逃逸检测脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0x03-容器逃逸检测脚本"}},[s._v("#")]),s._v(" 0x03 容器逃逸检测脚本")]),s._v(" "),a("p",[s._v("项目地址：https://github.com/teamssix/container-escape-check")]),s._v(" "),a("p",[s._v("直接在容器中执行以下命令即可")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://raw.githubusercontent.com/teamssix/container-escape-check/main/container-escape-check.sh -O -"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("不过大多容器可能没有 wget 命令，因此可以将脚本先克隆到本地，然后上传到容器再执行")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/teamssix/container-escape-check.git\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" container-escape-check\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x container-escape-check.sh\n./container-escape-check.sh\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[a("img",{attrs:{src:"/img/1649924405.png",alt:""}})]),s._v(" "),a("blockquote",[a("p",[s._v("参考资料：")]),s._v(" "),a("p",[s._v("《云原生安全-攻防实践与体系构建》")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/brant-ruan/awesome-container-escape",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/brant-ruan/awesome-container-escape"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("原文链接："),a("a",{attrs:{href:"https://zone.huoxian.cn/d/990",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://zone.huoxian.cn/d/990"),a("OutboundLink")],1)])]),s._v(" "),a("Vssue")],1)}),[],!1,null,null,null);t.default=r.exports}}]);